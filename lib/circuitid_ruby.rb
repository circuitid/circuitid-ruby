=begin
#Circuit ID REST API

## Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!

The version of the OpenAPI document: 0.47.8
Contact: support@circuitid.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

# Common files
require 'circuitid_ruby/api_client'
require 'circuitid_ruby/api_error'
require 'circuitid_ruby/version'
require 'circuitid_ruby/configuration'

# Models
require 'circuitid_ruby/models/acceptedsenders'
require 'circuitid_ruby/models/announcements'
require 'circuitid_ruby/models/authentication'
require 'circuitid_ruby/models/callqueueagents'
require 'circuitid_ruby/models/callqueues'
require 'circuitid_ruby/models/chatrooms'
require 'circuitid_ruby/models/clients'
require 'circuitid_ruby/models/conferencerooms'
require 'circuitid_ruby/models/contacts'
require 'circuitid_ruby/models/conversationmessages'
require 'circuitid_ruby/models/conversations'
require 'circuitid_ruby/models/customers'
require 'circuitid_ruby/models/developerapps'
require 'circuitid_ruby/models/developerappsubscriptions'
require 'circuitid_ruby/models/directories'
require 'circuitid_ruby/models/domains'
require 'circuitid_ruby/models/faxaccounts'
require 'circuitid_ruby/models/faxes'
require 'circuitid_ruby/models/find'
require 'circuitid_ruby/models/find_accepted_senders200_response'
require 'circuitid_ruby/models/find_announcements200_response'
require 'circuitid_ruby/models/find_call_queue_agents200_response'
require 'circuitid_ruby/models/find_call_queues200_response'
require 'circuitid_ruby/models/find_chat_rooms200_response'
require 'circuitid_ruby/models/find_clients200_response'
require 'circuitid_ruby/models/find_conference_rooms200_response'
require 'circuitid_ruby/models/find_contacts200_response'
require 'circuitid_ruby/models/find_conversation_messages200_response'
require 'circuitid_ruby/models/find_conversations200_response'
require 'circuitid_ruby/models/find_customers200_response'
require 'circuitid_ruby/models/find_developer_app_subscriptions200_response'
require 'circuitid_ruby/models/find_developer_apps200_response'
require 'circuitid_ruby/models/find_directories200_response'
require 'circuitid_ruby/models/find_domains200_response'
require 'circuitid_ruby/models/find_fax_account200_response'
require 'circuitid_ruby/models/find_faxes200_response'
require 'circuitid_ruby/models/find_firewall200_response'
require 'circuitid_ruby/models/find_group_members200_response'
require 'circuitid_ruby/models/find_groups200_response'
require 'circuitid_ruby/models/find_holidays200_response'
require 'circuitid_ruby/models/find_invoice_items200_response'
require 'circuitid_ruby/models/find_invoices200_response'
require 'circuitid_ruby/models/find_licenses200_response'
require 'circuitid_ruby/models/find_menu_options200_response'
require 'circuitid_ruby/models/find_menus200_response'
require 'circuitid_ruby/models/find_message_brands200_response'
require 'circuitid_ruby/models/find_message_campaigns200_response'
require 'circuitid_ruby/models/find_number_ports200_response'
require 'circuitid_ruby/models/find_numbers200_response'
require 'circuitid_ruby/models/find_offices200_response'
require 'circuitid_ruby/models/find_phone_inbound_rule_actions200_response'
require 'circuitid_ruby/models/find_phone_inbound_rules200_response'
require 'circuitid_ruby/models/find_phone_outbound_rule_actions200_response'
require 'circuitid_ruby/models/find_phone_outbound_rules200_response'
require 'circuitid_ruby/models/find_rate_centers200_response'
require 'circuitid_ruby/models/find_servers200_response'
require 'circuitid_ruby/models/find_time_schedules200_response'
require 'circuitid_ruby/models/find_user_tokens200_response'
require 'circuitid_ruby/models/find_users200_response'
require 'circuitid_ruby/models/find_virtual_extensions200_response'
require 'circuitid_ruby/models/firewall'
require 'circuitid_ruby/models/groupmembers'
require 'circuitid_ruby/models/groups'
require 'circuitid_ruby/models/holidays'
require 'circuitid_ruby/models/invoiceitems'
require 'circuitid_ruby/models/invoices'
require 'circuitid_ruby/models/licenses'
require 'circuitid_ruby/models/menuoptions'
require 'circuitid_ruby/models/menus'
require 'circuitid_ruby/models/messagebrands'
require 'circuitid_ruby/models/messagecampaigns'
require 'circuitid_ruby/models/numberports'
require 'circuitid_ruby/models/numbers'
require 'circuitid_ruby/models/offices'
require 'circuitid_ruby/models/phoneinboundruleactions'
require 'circuitid_ruby/models/phoneinboundrules'
require 'circuitid_ruby/models/phoneoutboundruleactions'
require 'circuitid_ruby/models/phoneoutboundrules'
require 'circuitid_ruby/models/ratecenters'
require 'circuitid_ruby/models/response_date'
require 'circuitid_ruby/models/response_error'
require 'circuitid_ruby/models/response_users'
require 'circuitid_ruby/models/servers'
require 'circuitid_ruby/models/timeschedules'
require 'circuitid_ruby/models/users'
require 'circuitid_ruby/models/usertokens'
require 'circuitid_ruby/models/virtualextensions'

# APIs
require 'circuitid_ruby/api/accepted_senders_api'
require 'circuitid_ruby/api/announcements_api'
require 'circuitid_ruby/api/app_marketplace_api'
require 'circuitid_ruby/api/authentication_api'
require 'circuitid_ruby/api/call_queue_agents_api'
require 'circuitid_ruby/api/call_queues_api'
require 'circuitid_ruby/api/chat_rooms_api'
require 'circuitid_ruby/api/clients_api'
require 'circuitid_ruby/api/conference_numbers_api'
require 'circuitid_ruby/api/conference_rooms_api'
require 'circuitid_ruby/api/contacts_api'
require 'circuitid_ruby/api/conversation_messages_api'
require 'circuitid_ruby/api/conversations_api'
require 'circuitid_ruby/api/customers_api'
require 'circuitid_ruby/api/dns_records_api'
require 'circuitid_ruby/api/developer_app_subscriptions_api'
require 'circuitid_ruby/api/developer_apps_api'
require 'circuitid_ruby/api/directories_api'
require 'circuitid_ruby/api/domains_api'
require 'circuitid_ruby/api/fax_account_api'
require 'circuitid_ruby/api/faxes_api'
require 'circuitid_ruby/api/find_numbers_api'
require 'circuitid_ruby/api/firewall_api'
require 'circuitid_ruby/api/group_members_api'
require 'circuitid_ruby/api/groups_api'
require 'circuitid_ruby/api/holidays_api'
require 'circuitid_ruby/api/info_api'
require 'circuitid_ruby/api/invoice_items_api'
require 'circuitid_ruby/api/invoices_api'
require 'circuitid_ruby/api/licenses_api'
require 'circuitid_ruby/api/menu_options_api'
require 'circuitid_ruby/api/menus_api'
require 'circuitid_ruby/api/message_brands_api'
require 'circuitid_ruby/api/message_campaigns_api'
require 'circuitid_ruby/api/number_ports_api'
require 'circuitid_ruby/api/numbers_api'
require 'circuitid_ruby/api/offices_api'
require 'circuitid_ruby/api/phone_inbound_rule_actions_api'
require 'circuitid_ruby/api/phone_inbound_rules_api'
require 'circuitid_ruby/api/phone_outbound_rule_actions_api'
require 'circuitid_ruby/api/phone_outbound_rules_api'
require 'circuitid_ruby/api/rate_centers_api'
require 'circuitid_ruby/api/servers_api'
require 'circuitid_ruby/api/time_schedules_api'
require 'circuitid_ruby/api/user_tokens_api'
require 'circuitid_ruby/api/users_api'
require 'circuitid_ruby/api/virtual_extensions_api'
require 'circuitid_ruby/api/voicemail_api'

module CircuitIDAPIClient
  class << self
    # Customize default settings for the SDK using block.
    #   CircuitIDAPIClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
